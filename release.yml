doc: 'Parent build file for changelog'

properties:
  VERSION:        '#{run("changelog", "release", "version")}'
  DEVELOP_BRANCH: 'develop'

targets:

  release:
    doc: 'Perform a release'
    steps:
    # check uncommitted changes
    - try:
      - $: 'git diff --quiet --exit-code HEAD'
      catch:
      - throw: 'There are uncommitted changes'
    # check we are on branch develop
    - execute: 'git rev-parse --abbrev-ref HEAD'
      output:  'branch'
    - if: 'branch != DEVELOP_BRANCH'
      then:
      - throw: 'We are not on branch "#{DEVELOP_BRANCH}"'
    # check release date is today
    - try:
      - $: 'changelog release date check'
      catch:
      - throw: 'bad release date in changelog'
    # read changelog information
    - try:
      - |
        message = run("changelog", "release", "summary")
        if message == "" {
          message = "Release " + VERSION
        } else {
          message = "Release " + VERSION + ": " + message
        }
      catch:
      - throw: 'reading changelog information'
    # print information message
    - print: 'Releasing version "#{VERSION}" with message "#{message}"'
    # merge develop on master tag release and return on develop
    - try:
      - $: 'git checkout master'
      - $: 'git pull'
      - $: 'git merge --no-ff develop -m "#{message}"'
      - $: 'git push'
      - $: 'git tag -a "#{VERSION}" -m "#{message}"'
      - $: 'git push origin "#{VERSION}"'
      catch:
      - throw: 'performing release'
      finally:
      - $: 'git checkout develop'
