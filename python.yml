doc: Parent build file for Python projects

extends:
- c4s4/build/buildir.yml

properties:
  PYVERSION:    ~
  VENV_DIR:     'venv'
  REQUIREMENTS: 'requirements.txt'
  PYLINTRC:     ~

environment:
  PATH:       '={_BASE}/={VENV_DIR}/bin:${PATH}'

targets:

  pyversion:
    doc: Set Python executable depending on version
    steps:
    - if: 'defined("PYVERSION") && PYVERSION != nil'
      then:
      - if: 'PYVERSION != 2 && PYVERSION != 3'
        then:
        - throw: 'PYVERSION must be 2 or 3'
      else:
      - try:
        - $: ['python3', '-V']
          =: '_'
        - 'PYVERSION = 3'
        catch:
        - try:
          - $: ['python2', '-V']
            =: '_'
          - 'PYVERSION = 2'
          catch:
          - throw: 'Python 2 or 3 must be installed'
      - print: 'Running Python ={PYVERSION}'

  init:
    doc: Create virtual environment
    steps:
    - delete: =VENV_DIR
    # create virtual environment
    - if: 'PYVERSION == 3'
      then:
      - $: ['python3', '-m', 'venv', =VENV_DIR]
      else:
      - $: ['virtualenv', =VENV_DIR]
    # install requirements
    - if: 'exists(REQUIREMENTS)'
      then:
      - if: 'PYVERSION == 3'
        then:
        - $: ['={VENV_DIR}/bin/python3', '-m', 'pip', 'install', '-r', =REQUIREMENTS]
        else:
        - $: ['={VENV_DIR}/bin/pip', 'install', '-r', =REQUIREMENTS]
      else:
      - print: 'No requirements file found'

  lint:
    doc: Check code with Pylint
    steps:
    - 'sources = filter(find(".", "**/*.py"), VENV_DIR+"/**/*")'
    - if: 'PYLINTRC != nil'
      then:
      - $: 'pylint --rcfile=={PYLINTRC} ={join(sources, " ")}'
      else:
      - $: 'pylint ={join(sources, " ")}'

  pylintrc:
    doc: Generate Pylint configuration file
    steps:
    - print: 'Geenrating Pylint configuration in pylintrc file'
    - $: 'pylint --generate-rcfile > pylintrc'
    - print: 'You should set PYLINTRC property with path to this file'

  console:
    doc: Run a Python console in virtual environment
    steps:
    - call: pyversion
    - $: 'python={PYVERSION}'

  run:
    doc: Run python script
    steps:
    - call: pyversion
    - $: ['python={PYVERSION}', =NAME]

  clean:
    doc: Clean generated files
    steps:
    - delete: =BUILD_DIR
    - delete: '**/__pycache__'
      dir:    =NAME
